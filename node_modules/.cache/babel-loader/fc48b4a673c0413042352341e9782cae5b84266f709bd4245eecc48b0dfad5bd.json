{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mirta\\\\Desktop\\\\React\\\\korisnicke-prijave-neispravnosti\\\\src\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { xml2js } from 'xml-js';\nimport './login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [formData, setFormData] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleLogin = () => {\n    if (username === 'admin' && password === 'admin') {\n      setLoggedIn(true);\n      fetchFormData();\n    } else {\n      setErrorMessage('Pogrešno korisničko ime ili lozinka!');\n    }\n  };\n  const fetchFormData = () => {\n    fetch('C:/Users/Mirta/Downloads/formData.xml').then(response => response.text()).then(xml => {\n      console.log('XML Data:', xml);\n      const jsonData = xml2js(xml, {\n        compact: true\n      });\n      console.log('JSON Data:', jsonData);\n      setFormData(jsonData.form);\n    }).catch(error => console.error('Error fetching XML file:', error));\n  };\n  if (!loggedIn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Prijava\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Korisni\\u010Dko ime\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        className: \"login-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Lozinka\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        className: \"login-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        className: \"login-button\",\n        children: \"Prijavi se\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n  if (!formData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Podaci iz XML datoteke:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Polje\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Vrijednost\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.entries(formData).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: typeof value === 'object' ? JSON.stringify(value) : value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"0rvowsU+1Kv/7fLEHsCc/9AgpK8=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","xml2js","jsxDEV","_jsxDEV","Login","_s","loggedIn","setLoggedIn","username","setUsername","password","setPassword","formData","setFormData","errorMessage","setErrorMessage","handleLogin","fetchFormData","fetch","then","response","text","xml","console","log","jsonData","compact","form","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","Object","entries","map","key","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/Mirta/Desktop/React/korisnicke-prijave-neispravnosti/src/login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { xml2js } from 'xml-js';\r\nimport './login.css'; \r\n\r\nfunction Login() {\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [formData, setFormData] = useState(null);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const handleLogin = () => {\r\n    if (username === 'admin' && password === 'admin') {\r\n      setLoggedIn(true);\r\n      fetchFormData();\r\n    } else {\r\n      setErrorMessage('Pogrešno korisničko ime ili lozinka!');\r\n    }\r\n  };\r\n\r\n  const fetchFormData = () => {\r\n    fetch('C:/Users/Mirta/Downloads/formData.xml')\r\n      .then(response => response.text())\r\n      .then(xml => {\r\n        console.log('XML Data:', xml);\r\n        const jsonData = xml2js(xml, { compact: true });\r\n        console.log('JSON Data:', jsonData);\r\n        setFormData(jsonData.form);\r\n      })\r\n      .catch(error => console.error('Error fetching XML file:', error));\r\n  };\r\n\r\n  if (!loggedIn) {\r\n    return (\r\n      <div className=\"login-container\">\r\n        <h2>Prijava</h2>\r\n        <input type=\"text\" placeholder=\"Korisničko ime\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"login-input\" />\r\n        <input type=\"password\" placeholder=\"Lozinka\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"login-input\" />\r\n        <button onClick={handleLogin} className=\"login-button\">Prijavi se</button>\r\n        {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!formData) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Podaci iz XML datoteke:</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Polje</th>\r\n            <th>Vrijednost</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Object.entries(formData).map(([key, value]) => (\r\n            <tr key={key}>\r\n              <td>{key}</td>\r\n              <td>{typeof value === 'object' ? JSON.stringify(value) : value}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}